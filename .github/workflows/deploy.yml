name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      GCP_REGION: ${{ secrets.GCP_REGION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Set up gcloud CLI and Docker
      run: |
        echo "$GCP_SA_KEY" > "${HOME}/gcloud-key.json"
        gcloud auth activate-service-account --key-file="${HOME}/gcloud-key.json"
        gcloud config set project $GCP_PROJECT_ID
        gcloud auth configure-docker


    - name: Build and push commentservice Docker image to Google Container Registry
      run: |
        docker build -t gcr.io/$GCP_PROJECT_ID/commentservice:latest ./services/commentservice
        docker push gcr.io/$GCP_PROJECT_ID/commentservice:latest

    - name: Deploy commentservice to Cloud Run
      run: |
        gcloud run deploy commentservice --image gcr.io/$GCP_PROJECT_ID/commentservice:latest --platform managed --region $GCP_REGION --allow-unauthenticated

    - name: Build and push chatservice Docker image to Google Container Registry
      run: |
        docker build -t gcr.io/$GCP_PROJECT_ID/chatservice:latest ./services/chatservice
        docker push gcr.io/$GCP_PROJECT_ID/chatservice:latest

    - name: Deploy chatservice to Cloud Run
      run: |
        gcloud run deploy chatservice --image gcr.io/$GCP_PROJECT_ID/chatservice:latest --platform managed --region $GCP_REGION --allow-unauthenticated

    - name: Build and push frontend Docker image to Google Container Registry
      run: |
        docker build -t gcr.io/$GCP_PROJECT_ID/frontend:latest ./frontend
        docker push gcr.io/$GCP_PROJECT_ID/frontend:latest

    - name: Deploy frontend to Cloud Run
      run: |
        gcloud run deploy frontend --image gcr.io/$GCP_PROJECT_ID/frontend:latest --platform managed --region $GCP_REGION --allow-unauthenticated
